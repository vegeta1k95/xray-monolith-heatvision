function init_opt_base()
	-- printf("working?")
	table.insert(ui_options.options, {
		id = "modded_exes",
		sh = true,
		gr = {
			{
				id = "slide_modded_exes",
				type = "slide",
				link = "ui_options_slider_other",
				text = "ui_mm_title_modded_exes",
				size = { 512, 50 },
			},

			-- Shader scopes
			{
				id = "sds_enable",
				type = "check",
				val = 1,
				def = true,
				cmd = "sds_enable",
			},
			{
				id = "sds_speed_enable",
				type = "check",
				val = 1,
				def = true,
				cmd = "sds_speed_enable",
			},
			{
				id = "sds_zoom_enable",
				type = "check",
				val = 1,
				def = true,
				cmd = "sds_zoom_enable",
			},
			{
				id = "new_zoom_enable",
				type = "check",
				val = 1,
				def = true,
				cmd = "new_zoom_enable",
			},                  
			{
				id = "zoom_step_count",
				type = "track",
				val = 2,
				def = 3,
				min = 1,
				max = 10,
				step = 1,
				cmd = "zoom_step_count",
			},
			{
				id = "scope_blur_inner",
				type = "track",
				val = 2,
				def = 0.1,
				min = 0,
				max = 1,
				step = 0.05,
				cmd = "scope_blur_inner",
			},
			{
				id = "scope_blur_outer",
				type = "track",
				val = 2,
				def = 1,
				min = 0,
				max = 1,
				step = 0.05,
				cmd = "scope_blur_outer",
			},
			{
				id = "scope_brightness",
				type = "track",
				val = 2,
				def = 1,
				min = 0,
				max = 1,
				step = 0.05,
				cmd = "scope_brightness",
			},
			{
				id = "scope_ca",
				type = "track",
				val = 2,
				def = 0.003,
				min = 0,
				max = 0.01,
				step = 0.0005,
				cmd = "scope_ca",
			},
			{
				id = "scope_fog_radius",
				type = "track",
				val = 2,
				def = 0.9,
				min = 0.5,
				max = 1.5,
				step = 0.05,
				cmd = "scope_fog_radius",
			},
			{
				id = "scope_fog_interp",
				type = "track",
				val = 2,
				def = 0.2,
				min = 0.05,
				max = 0.25,
				step = 0.01,
				cmd = "scope_fog_interp",
			},
			{
				id = "scope_fog_sharp",
				type = "track",
				val = 2,
				def = 8,
				min = 2,
				max = 20,
				step = 1,
				cmd = "scope_fog_sharp",
			},
			{
				id = "scope_fog_swayAim",
				type = "track",
				val = 2,
				def = 3.2,
				min = 0.8,
				max = 5,
				step = 0.1,
				cmd = "scope_fog_swayAim",
			},
			{
				id = "scope_fog_swayMove",
				type = "track",
				val = 2,
				def = 1.5,
				min = 0.5,
				max = 3,
				step = 0.1,
				cmd = "scope_fog_swayMove",
			},
			{
				id = "scope_fog_travel",
				type = "track",
				val = 2,
				def = 1,
				min = 0.2,
				max = 2,
				step = 0.1,
				cmd = "scope_fog_travel",
			},

			{ id = "divider", type = "line" },

			-- Particles
			{
				id = "particle_update_mod",
				type = "track",
				val = 2,
				def = 1,
				min = 0.04,
				max = 1,
				step = 0.01,
				cmd = "particle_update_mod",
			},

			{ id = "divider", type = "line" },

			-- PDA
			{
				id = "pda_map_zoom_in_to_mouse",
				type = "list",
				val = 0,
				curr = {function() return get_console_cmd(0, "pda_map_zoom_in_to_mouse") end},
				content = {function() return {{"1", "ON"}, {"0", "OFF"}} end},
				cmd = "pda_map_zoom_in_to_mouse",
				restart = false,
			},
			{
				id = "pda_map_zoom_out_to_mouse",
				type = "list",
				val = 0,
				curr = {function() return get_console_cmd(0, "pda_map_zoom_out_to_mouse") end},
				content = {function() return {{"1", "ON"}, {"0", "OFF"}} end},
				cmd = "pda_map_zoom_out_to_mouse",
				restart = false,
			},

			{ id = "divider", type = "line" },

			-- QoL
			{
				id = "freelook_cam_limit",
				type = "track",
				val = 2,
				def = 1.57,
				min = 0,
				max = 3.14,
				step = 0.01,
				cmd = "freelook_cam_limit",
			},
			{
				id = "monster_stuck_fix",
				type = "list",
				val = 0,
				curr = {function() return get_console_cmd(0, "monster_stuck_fix") end},
				content = {function() return {{"1", "ON"}, {"0", "OFF"}} end},
				cmd = "monster_stuck_fix",
				restart = true,
			},
			{
				id = "mouse_wheel_change_weapon",
				type = "list",
				val = 0,
				curr = {function() return get_console_cmd(0, "mouse_wheel_change_weapon") end},
				content = {function() return {{"1", "ON"}, {"0", "OFF"}} end},
				cmd = "mouse_wheel_change_weapon",
				restart = false,
			},
			{
				id = "mouse_wheel_invert_zoom",
				type = "list",
				val = 0,
				curr = {function() return get_console_cmd(0, "mouse_wheel_invert_zoom") end},
				content = {function() return {{"1", "ON"}, {"0", "OFF"}} end},
				cmd = "mouse_wheel_invert_zoom",
				restart = false,
			},
			{
				id = "use_english_text_for_missing_translations",
				type = "list",
				val = 0,
				curr = {function() return get_console_cmd(0, "use_english_text_for_missing_translations") end},
				content = {function() return {{"1", "ON"}, {"0", "OFF"}} end},
				cmd = "use_english_text_for_missing_translations",
				restart = true,
			},
			{
				id = "crash_save",
				type = "list",
				val = 0,
				curr = {function() return get_console_cmd(0, "crash_save") end},
				content = {function() return {{"1", "ON"}, {"0", "OFF"}} end},
				cmd = "crash_save",
			},
			{
				id = "crash_save_count",
				type = "track",
				val = 2,
				def = 10,
				min = 1,
				max = 20,
				step = 1,
				cmd = "crash_save_count",
			},

			{ id = "divider", type = "line" },

			-- Sounds
			{
				id = "snd_doppler_power",
				type = "track",
				val = 2,
				def = 1.8,
				min = 0,
				max = 5,
				step = 0.1,
				cmd = "snd_doppler_power",
			},
			{
				id = "snd_doppler_smoothing",
				type = "track",
				val = 2,
				def = 15,
				min = 1,
				max = 100,
				step = 1,
				cmd = "snd_doppler_smoothing",
			},

			{ id = "divider", type = "line" },

			-- Gameplay
			{
				id = "first_person_death",
				type = "list",
				val = 0,
				curr = {function() return get_console_cmd(0, "first_person_death") end},
				content = {function() return {{"1", "ON"}, {"0", "OFF"}} end},
				cmd = "first_person_death",
			},
			{
				id = "first_person_death_position_smoothing",
				type = "track",
				val = 2,
				def = 6,
				min = 1,
				max = 30,
				step = 1,
				cmd = "first_person_death_position_smoothing",
			},
			{
				id = "first_person_death_direction_smoothing",
				type = "track",
				val = 2,
				def = 12,
				min = 1,
				max = 30,
				step = 1,
				cmd = "first_person_death_direction_smoothing",
			},
			{
				id = "pseudogiant_can_damage_objects_on_stomp",
				type = "list",
				val = 0,
				curr = {function() return get_console_cmd(0, "pseudogiant_can_damage_objects_on_stomp") end},
				content = {function() return {{"1", "ON"}, {"0", "OFF"}} end},
				cmd = "pseudogiant_can_damage_objects_on_stomp",
			},
			{
				id = "telekinetic_objects_include_corpses",
				type = "list",
				val = 0,
				curr = {function() return get_console_cmd(0, "telekinetic_objects_include_corpses") end},
				content = {function() return {{"1", "ON"}, {"0", "OFF"}} end},
				cmd = "telekinetic_objects_include_corpses",
			},

			{ id = "divider", type = "line" },

			-- Debug
			{
				id = "string_table_error_msg",
				type = "list",
				val = 0,
				curr = {function() return get_console_cmd(0, "string_table_error_msg") end},
				content = {function() return {{"1", "ON"}, {"0", "OFF"}} end},
				cmd = "string_table_error_msg",
			},
			{
				id = "log_timestamps",
				type = "list",
				val = 0,
				curr = {function() return get_console_cmd(0, "log_timestamps") end},
				content = {function() return {{"1", "ON"}, {"0", "OFF"}} end},
				cmd = "log_timestamps",
			},
			{
				id = "lua_gcstep",
				type = "track",
				val = 2,
				def = 400,
				min = 1,
				max = 1000,
				step = 10,
				cmd = "lua_gcstep",
			},
			{
				id = "mouse_buffer_size",
				type = "track",
				val = 2,
				def = 1024,
				min = 64,
				max = 2048,
				step = 32,
				cmd = "mouse_buffer_size",
			},
			{
				id = "keyboard_buffer_size",
				type = "track",
				val = 2,
				def = 1024,
				min = 64,
				max = 2048,
				step = 32,
				cmd = "keyboard_buffer_size",
			},
		},
	})
end

function on_xml_read()
	ui_options_base = ui_options.init_opt_base
	ui_options.init_opt_base = function()
		ui_options_base()
		init_opt_base()
	end
	ui_options.init_opt_base()
end
